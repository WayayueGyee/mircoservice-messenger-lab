{
  "groups": [
    {
      "name": "services"
    }
  ],
  "properties": [
    {
      "name": "app.services.friends.url",
      "type": "java.lang.String",
      "description": "Connection string for accessing some microservice."
    },
    {
      "name": "app.security.integrations.api-key",
      "type": "java.lang.String",
      "description": "Api key for authorizing external clients."
    },
    {
      "name": "app.security.integrations.root-path",
      "type": "java.lang.String",
      "description": "Root path for integration requests."
    },
    {
      "name": "app.security.jwt-config.secret-key",
      "type": "java.lang.String",
      "description": "Symmetric secret key to for signing JWTs."
    },
    {
      "name": "app.security.jwt-config.access-token.signing-algorithm",
      "type": "java.lang.String",
      "description": "Signing algorithm for access token."
    },
    {
      "name": "app.security.jwt-config.access-token.lifespan",
      "type": "java.time.LocalTime",
      "description": "Living time of access token."
    },
    {
      "name": "app.security.jwt-config.refresh-token.signing-algorithm",
      "type": "java.lang.String",
      "description": "Signing algorithm for refresh token."
    },
    {
      "name": "app.security.jwt-config.refresh-token.lifespan",
      "type": "java.time.LocalTime",
      "description": "Living time of refresh token."
    },
    {
      "name": "app.security.jwt-config.key-pair.public-key",
      "type": "java.lang.String",
      "description": "Public key of asymmetric pair for validating JWTs."
    },
    {
      "name": "app.security.jwt-config.key-pair.private-key",
      "type": "java.lang.String",
      "description": "Description for app.security.jwt-config.key-pair.private-key."
    },
    {
      "name": "app.security.jwt-auth.permit-all",
      "type": "java.lang.String",
      "description": "Permitted paths."
    },
    {
      "name": "app.security.jwt-auth.validation-key",
      "type": "java.lang.String",
      "description": "Key for validating JWT."
    },
    {
      "name": "app.security.jwt-auth.root-path",
      "type": "java.lang.String",
      "description": "Root path for JWT authorization."
    },
    {
      "name": "app.security.jwt-auth.access-exp",
      "type": "java.time.LocalDate",
      "description": "Access token expiration time."
    },
    {
      "name": "app.services.friends.base-url",
      "type": "java.lang.String",
      "description": "Base url for integration requests to friends service."
    },
    {
      "name": "app.services.friends.root-path",
      "type": "java.lang.String",
      "description": "Root path following the base url used in a friends service integration request ."
    },
    {
      "name": "app.services.friends.timeout",
      "type": "java.lang.Integer",
      "description": "Timeout for a friends service integration requests."
    },
    {
      "name": "app.services.friends.api-key",
      "type": "java.lang.String",
      "description": "Api key used for authorization in a friends service integration requests."
    },
    {
      "name": "app.rabbitmq.host",
      "type": "java.lang.String",
      "description": "RabbitMQ host."
    },
    {
      "name": "app.rabbitmq.username",
      "type": "java.lang.String",
      "description": "RabbitMQ server username."
    },
    {
      "name": "app.rabbitmq.password",
      "type": "java.lang.String",
      "description": "RabbitMQ server password."
    }
  ]
}